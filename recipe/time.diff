--- nautycliquer2.c	2018-09-26 00:20:31.223412807 -0500
+++ nautycliquer.c	2018-09-26 00:23:32.992958736 -0500
@@ -51,8 +51,6 @@
 static int *clique_size;      /* c[i] == max. clique size in {0,1,...,i-1} */
 static set_t current_clique;  /* Current clique being searched. */
 static set_t best_clique;     /* Largest/heaviest clique found so far. */
-static struct tms cputimer;      /* Timer for opts->time_function() */
-static struct timeval realtimer; /* Timer for opts->time_function() */
 static int clique_list_count=0;  /* No. of cliques in opts->clique_list[] */
 static int weight_multiplier=1;  /* Weights multiplied by this when passing
 				  * to time_function(). */
@@ -77,11 +75,7 @@
 int old_clique_list_count = clique_list_count;          \
 int old_weight_multiplier = weight_multiplier;          \
 int **old_temp_list = temp_list;                        \
-int old_temp_count = temp_count;                        \
-struct tms old_cputimer;                                \
-struct timeval old_realtimer;                           \
-memcpy(&old_cputimer,&cputimer,sizeof(struct tms));       \
-memcpy(&old_realtimer,&realtimer,sizeof(struct timeval));
+int old_temp_count = temp_count;
 
 #define ENTRANCE_RESTORE() \
 clique_size = old_clique_size;                          \
@@ -90,9 +84,7 @@
 clique_list_count = old_clique_list_count;              \
 weight_multiplier = old_weight_multiplier;              \
 temp_list = old_temp_list;                              \
-temp_count = old_temp_count;                            \
-memcpy(&cputimer,&old_cputimer,sizeof(struct tms));       \
-memcpy(&realtimer,&old_realtimer,sizeof(struct timeval));
+temp_count = old_temp_count;
 
 
 /* Number of clock ticks per second (as returned by sysconf(_SC_CLK_TCK)) */
@@ -156,8 +148,8 @@
  */
 static int unweighted_clique_search_single(int *table, int min_size,
 					   graph_t *g, clique_options *opts) {
-	struct tms tms;
-	struct timeval timeval;
+
+
 	int i,j;
 	int v,w;
 	int *newtable;
@@ -354,8 +346,8 @@
 					int min_size, int max_size,
 					boolean maximal, graph_t *g,
 					clique_options *opts) {
-	struct timeval timeval;
-	struct tms tms;
+
+
 	int i,j;
 	int v;
 	int *newtable;
@@ -560,8 +552,8 @@
 static int weighted_clique_search_single(int *table, int min_weight,
 					 int max_weight, graph_t *g,
 					 clique_options *opts) {
-	struct timeval timeval;
-	struct tms tms;
+
+
 	int i,j;
 	int v;
 	int *newtable;
@@ -710,8 +702,8 @@
 				      int min_weight, int max_weight,
 				      boolean maximal, graph_t *g,
 				      clique_options *opts) {
-	struct timeval timeval;
-	struct tms tms;
+
+
 	int i,j;
 	int v;
 	int *newtable;
@@ -1132,9 +1124,6 @@
 		return NULL;
 	}
 
-	if (clocks_per_sec==0)
-		clocks_per_sec=sysconf(_SC_CLK_TCK);
-	ASSERT(clocks_per_sec>0);
 
 	/* Dynamic allocation */
 	current_clique=set_new(g->n);
@@ -1258,9 +1247,6 @@
 		return 0;
 	}
 
-	if (clocks_per_sec==0)
-		clocks_per_sec=sysconf(_SC_CLK_TCK);
-	ASSERT(clocks_per_sec>0);
 
 	/* Dynamic allocation */
 	current_clique=set_new(g->n);
@@ -1410,9 +1396,6 @@
 		return NULL;
 	}
 
-	if (clocks_per_sec==0)
-		clocks_per_sec=sysconf(_SC_CLK_TCK);
-	ASSERT(clocks_per_sec>0);
 
 	/* Check whether we can use unweighted routines. */
 	if (!graph_weighted(g)) {
@@ -1571,9 +1554,6 @@
 		return 0;
 	}
 
-	if (clocks_per_sec==0)
-		clocks_per_sec=sysconf(_SC_CLK_TCK);
-	ASSERT(clocks_per_sec>0);
 
 	if (!graph_weighted(g)) {
 		min_weight=DIV_UP(min_weight,g->weights[0]);
